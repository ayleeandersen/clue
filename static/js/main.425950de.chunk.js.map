{"version":3,"sources":["logo.png","utils/constants.js","components/Header.js","utils/helpers.js","pages/Introduction.js","components/ClueCard.js","pages/EnterCode.js","pages/Notebook.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TABS","id","name","SUSPECTS","WEAPONS","LOCATIONS","CODES","CLUES","person","weapon","place","Header","className","src","logo","alt","map","tab","props","active","key","onClick","clickTab","React","Component","addToLocalStorage","clue","existingClues","JSON","parse","localStorage","getItem","alreadyExisting","filter","c","length","unshift","setItem","stringify","existingNotes","note","concat","Introduction","ClueCard","clues","this","EnterCode","state","code","valid","clearInput","inputRef","current","textInput","focus","i","input","submit","finalCode","toLowerCase","includes","setState","change","val","createRef","ref","fields","value","onChange","isValid","inputStyleInvalid","border","Notecard","showDiscoveredClues","toggleShowDiscoveredClues","prevState","getClues","isExistingNote","suspect","disabled","defaultChecked","location","App","visitedIntro","useState","setTab","Notebook","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.425950de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.366cf5f1.png\";","export const TABS = [\n  {\n    id: 'enterCode',\n    name: 'Enter Code',\n  }, {\n    id: 'notebook',\n    name: 'Notebook',\n  }\n];\n\nexport const SUSPECTS = [\n  'Kishkumen',\n  'Gadianton',\n  'King Noah',\n  'Nehor',\n  'Amalickiah',\n  'Ammoron',\n  'Zerahemnah',\n  'Giddianhi',\n];\n\nexport const WEAPONS = [\n  'Sword of Laban',\n  'Sling',\n  'Bow and Arrow',\n  'Javelin',\n  'Atlatl',\n  'Poison',\n  'Knife',\n  'Fire',\n];\n\nexport const LOCATIONS = [\n  'Zarahemla',\n  'Ammonihah',\n  'Jerusalem',\n  'Land of Desolation',\n  'Land of Ishmael',\n  'Mount Antipas',\n  'City of Laman',\n  'The Wilderness',\n];\n\nexport const FREE_CLUES = [\n  'Kishkumen',\n  'Knife',\n  'Land of Desolation',\n];\n\nexport const FREE_CODE = '1a1a1';\n\n// Must be lowercase\nexport const CODES = [\n  FREE_CODE,\n  'aaaaa',\n  '11111',\n  'a1a1a',\n  'bbbbb',\n  'ccccc',\n  'ddddd',\n];\n\nexport const CLUES = {\n  [FREE_CODE]: {\n    person: 'Kishkumen',\n    weapon: 'Knife',\n    place: 'Land of Desolation',\n  },\n  'aaaaa': {\n    person: 'Gadianton',\n    weapon: 'Sword of Laban',\n    place: 'Zarahemla',\n  },\n  '11111': {\n    person: 'King Noah',\n    weapon: 'Sling',\n    place: 'Ammonihah',\n  },\n  'a1a1a': {\n    person: 'Nehor',\n    weapon: 'Bow and Arrow',\n    place: 'Jerusalem',\n  },\n  'bbbbb': {\n    person: 'Amalickiah',\n    weapon: 'Atlatl',\n    place: 'Mount Antipas',\n  },\n  'ccccc': {\n    person: 'Ammoron',\n    weapon: 'Poison',\n    place: 'City of Laman',\n  },\n  'ddddd': {\n    person: 'Giddianhi',\n    weapon: 'Fire',\n    place: 'The Wilderness',\n  },\n};","import React from 'react';\n\nimport { TABS } from '../utils/constants';\nimport logo from '../logo.png';\n\nclass Header extends React.Component {\n  render() {\n    return <div className='header'>\n      <img src={logo} className='logo' alt='logo' />\n      <div className='tabs'>\n        {TABS.map(tab => (\n          <div\n            className={`tab ${tab.id === this.props.active ? 'active' : ''}`}\n            key={tab.id}\n            onClick={() => this.props.clickTab(tab.id)}\n          >\n            {tab.name}\n          </div>\n        ))}\n      </div>\n    </div>;\n  }\n}\n\nexport default Header","export const addToLocalStorage = clue => {\n  const existingClues = JSON.parse(localStorage.getItem('discoveredClues')) || [];\n  let alreadyExisting = existingClues.filter(c => c.person === clue.person).length;\n  if (!alreadyExisting) {\n    existingClues.unshift(clue)\n  }\n  localStorage.setItem('discoveredClues', JSON.stringify(existingClues));\n\n  let existingNotes = JSON.parse(localStorage.getItem('existingNotes')) || [];\n  alreadyExisting = existingNotes.filter(note => note === clue.person).length;\n  existingNotes = existingNotes.concat([clue.person, clue.weapon, clue.place]);\n  localStorage.setItem('existingNotes', JSON.stringify(existingNotes));\n};","import React from 'react';\n\nimport { FREE_CODE, CLUES } from '../utils/constants';\nimport { addToLocalStorage } from '../utils/helpers';\n\nclass Introduction extends React.Component {\n  componentDidMount() {\n    localStorage.setItem('visitedIntro', JSON.stringify(true));\n    addToLocalStorage(CLUES[FREE_CODE]);\n  }\n\n  render() {\n    return (\n      <div className='body introduction'>\n        <p>Welcome to Clue - Book of Mormon Edition!</p>\n        <p>Each puzzle you solve throughout the course of the activity will give you a secret code. Use the \"Enter Code\" tab to get the corresponding clues from that puzzle. When you get a clue, it will be added to the \"Notebook\" tab. The more puzzles you solve, the closer you'll be to catching the criminal!</p>\n        <p>Good luck!</p>\n      </div>\n    );\n  }\n}\n\nexport default Introduction","import React from 'react';\n\nclass ClueCard extends React.Component {\n  render() {\n    const { clues } = this.props;\n\n    return (\n      <div className='clue-card'>\n        <h1>Clue</h1>\n        <h3 className='clue-card-row'>\n          <span>Suspect:</span>\n          <span className='clue-card-clue'>{clues.person}</span>\n        </h3>\n        <h3 className='clue-card-row'>\n          <span>Weapon:</span>\n          <span className='clue-card-clue'>{clues.weapon}</span>\n        </h3>\n        <h3 className='clue-card-row'>\n          <span>Location:</span>\n          <span className='clue-card-clue'>{clues.place}</span>\n        </h3>\n      </div>\n    );\n  }\n}\n\nexport default ClueCard","import React from 'react';\nimport ReactCodeInput from 'react-code-input';\n\nimport ClueCard from '../components/ClueCard';\n\nimport { CODES, CLUES } from '../utils/constants';\nimport { addToLocalStorage } from '../utils/helpers';\n\nclass EnterCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n  }\n\n  state = {\n    code: '',\n    valid: true,\n    clues: null,\n  };\n\n  clearInput = () => {\n    if (this.inputRef.current.textInput[0]) {\n      this.inputRef.current.textInput[0].focus();\n    }\n    for (let i = 0; i < 5; i++) {\n      this.inputRef.current.state.input[i] = '';\n    }\n  }\n\n  submit = () => {\n    const { code } = this.state;\n    const finalCode = code.toLowerCase()\n    if (CODES.includes(finalCode)) {\n      this.setState({ code: '', clues: CLUES[finalCode] });\n      this.clearInput();\n      addToLocalStorage(CLUES[finalCode]);\n    } else {\n      this.setState({ valid: false, clues: null });\n      this.inputRef.current.textInput[0].focus();\n    }\n  }\n\n  change = val => {\n    this.setState({ code: val, valid: true });\n  }\n\n  render() {\n    const { code, valid, clues } = this.state;\n\n    return (\n      <div className='body'>\n        <p>Enter the code you found from a puzzle to get your next clue</p>\n        <ReactCodeInput\n          ref={this.inputRef}\n          fields={5}\n          className='code-input'\n          value={code}\n          onChange={this.change}\n          isValid={valid}\n          inputStyleInvalid={{ border: '2px solid #9F2D33' }}\n        />\n        <button className='submit' onClick={this.submit}>\n          Submit\n        </button>\n        {!valid && (\n          <>\n            <h1 className='result'>Incorrect</h1>\n            <p>If you get stuck, ask one of the helpers for a hint!</p>\n          </>\n        )}\n        {clues && (\n          <ClueCard clues={clues} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EnterCode","import React from 'react';\nimport { Checkbox } from 'pretty-checkbox-react';\nimport '@djthoms/pretty-checkbox';\n\nimport ClueCard from '../components/ClueCard';\n\nimport { SUSPECTS, WEAPONS, LOCATIONS } from '../utils/constants';\n\nclass Notecard extends React.Component {\n  state = {\n    showDiscoveredClues: false,\n  };\n\n  toggleShowDiscoveredClues = () => {\n    this.setState(prevState => ({\n      showDiscoveredClues: !prevState.showDiscoveredClues,\n    }))\n  }\n\n  getClues = () => JSON.parse(localStorage.getItem('discoveredClues')) || [];\n\n  isExistingNote = note => (JSON.parse(localStorage.getItem('existingNotes')) || []).includes(note);\n\n  render() {\n    const { showDiscoveredClues } = this.state;\n\n    return (\n      <div className='body'>\n        <div className='notebook-table'>\n          <h1>Suspects</h1>\n          {SUSPECTS.map(suspect => (\n            <div className='row' key={suspect}>\n              <span className='table-value'>{suspect}</span>\n              <Checkbox\n                disabled\n                defaultChecked={this.isExistingNote(suspect)}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='notebook-table'>\n          <h1>Weapons</h1>\n          {WEAPONS.map(weapon => (\n            <div className='row' key={weapon}>\n              <span className='table-value'>{weapon}</span>\n              <Checkbox\n                disabled\n                defaultChecked={this.isExistingNote(weapon)}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='notebook-table'>\n          <h1>Locations</h1>\n          {LOCATIONS.map(location => (\n            <div className='row' key={location}>\n              <span className='table-value'>{location}</span>\n              <Checkbox\n                disabled\n                defaultChecked={this.isExistingNote(location)}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='link' onClick={this.toggleShowDiscoveredClues}>\n          {showDiscoveredClues ? 'Hide' : 'Show'} previously discovered clues\n        </div>\n        {showDiscoveredClues && this.getClues().map((clues, i) => (\n          <ClueCard clues={clues} key={i} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Notecard","import React, { useState } from 'react';\n\nimport Header from './components/Header';\nimport Introduction from './pages/Introduction';\nimport EnterCode from './pages/EnterCode';\nimport Notebook from './pages/Notebook';\n\nimport { TABS } from './utils/constants';\n\nimport './App.css';\n\nfunction App() {\n  const visitedIntro = JSON.parse(localStorage.getItem('visitedIntro'));\n\n  const [tab, setTab] = useState(visitedIntro ? TABS[0].id : '');\n\n  const clickTab = id => {\n    setTab(id)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header active={tab} clickTab={clickTab} />\n      {visitedIntro ? (\n        <>\n          {tab === TABS[0].id && <EnterCode />}\n          {tab === TABS[1].id && <Notebook />}\n        </>\n      ) : (\n          <Introduction />\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}